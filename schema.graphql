type Account @entity {
  "unique identifier and primary key of the entity"
  id: ID! # account address
  "account address"
  address: Bytes!
  "current stake"
  stakedAmount: BigDecimal!
  "total harvested"
  harvestedAmount: BigDecimal!
  transactionsCount: BigInt!
  stakeEventsCount: BigInt!
  unstakeEventsCount: BigInt!
  harvestEventsCount: BigInt!
  cooldownTriggeredAtTimestamp: BigInt!
  cooldownEndTimestamp: BigInt!
  cooldownEndTime: String
  transactions: [Transaction!] @derivedFrom(field: "account")
}

type Transaction @entity {
  "unique identifier and primary key of the entity"
  id: ID! # txhash
  account: Account!
  timestamp: Int!
  block: BigInt!
  day: Day!
  events: [ActivityEvent!] @derivedFrom(field: "transaction")
}

type ActivityEvent @entity {
  "unique identifier and primary key of the entity"
  id: ID! # txhash + log index
  transaction: Transaction!
  eventType: EventType!
  amount: BigDecimal!
}

type Day @entity {
  "unique identifier and primary key of the entity"
  id: ID! # timestamp rounded to current day by dividing by 86400
  # timestamp rounded to current day by dividing by 86400
  timestamp: Int!
  date: String!
  stakedAmount: BigDecimal!
  harvestedAmount: BigDecimal!
  dayStakedAmount: BigDecimal!
  daylUnstakedAmount: BigDecimal!
  dayHarvestAmount: BigDecimal!
  dayTransactionsCount: BigInt!
  dayStakeEventsCount: BigInt!
  dayUnstakeEventsCount: BigInt!
  dayHarvestEventsCount: BigInt!
  accountsCount: BigInt!
  transactionsCount: BigInt!
  stakeEventsCount: BigInt!
  unstakeEventsCount: BigInt!
  harvestEventsCount: BigInt!
  transactions: [Transaction!] @derivedFrom(field: "day")
}

type Total @entity {
  "unique identifier and primary key of the entity"
  id: ID! # 1
  stakedAmount: BigDecimal!
  harvestedAmount: BigDecimal!
  accountsCount: BigInt!
  transactionsCount: BigInt!
  stakeEventsCount: BigInt!
  unstakeEventsCount: BigInt!
  harvestEventsCount: BigInt!
}

enum EventType {
  STAKE
  UNSTAKE
  HARVEST
  TRIGGER_UNSTAKE
}
